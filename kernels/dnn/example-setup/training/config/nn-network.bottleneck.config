[*]
input-dimension                 = 297 # = (16 mfcc + 16 delta + 1 deltadelta[0]) * 9 frames
bottleneck-layer-type           = linear+sigmoid

[*.neural-network]
links                           = 0->layer-normalization:0

[*.layer-normalization]
layer-type                      = mean-and-variance-normalization
dimension-input                 = $(input-dimension)
dimension-output                = $(input-dimension)
links                           = 0->hidden-layer-1:0
#mean-file                      = data/mean.xml
#standard-deviation-file        = data/std.xml

[*.hidden-layer-1]
layer-type                      = linear+sigmoid
dimension-input                 = $(input-dimension)
dimension-output                = 1000
links                           = 0->bottleneck-layer:0
initialization-type             = random

[*.bottleneck-layer]
layer-type                      = $(bottleneck-layer-type)
dimension-input                 = 1000
dimension-output                = 50
links                           = 0->hidden-layer-3:0
initialization-type             = random

[*.hidden-layer-3]
layer-type                      = linear+sigmoid
dimension-input                 = 50
dimension-output                = 1000
links                           = 0->output-layer:0
initialization-type             = random

[*.output-layer]
layer-type                      = linear+softmax
dimension-input                 = 1000
dimension-output                = 501
initialization-type             = random
bias-initialization-range-min   = -4.1
bias-initialization-range-max   = -3.9
