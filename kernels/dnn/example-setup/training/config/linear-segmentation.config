# this configuration generates an alignment using linear segmentation
# and accumulates an mixture set

DESCRIPTION = linear-segmentation

include shared.config

[*.acoustic-model-trainer]
action                          = accumulate-mixture-set-text-dependent

[*.linear-segmenter]
*.minimum-speech-proportion    = 0.7
maximum-segment-length         = 6000

[*.mixture-set-trainer]
new-mixture-set-file           = data/$(DESCRIPTION).mix

# ---------------------------------------------------------------------------

[*.corpus]
file                            = $(CORPUS)
audio-dir                       = $(AUDIO_DIR)
warn-about-unexpected-elements  = no
capitalize-transcriptions       = no
progress-indication             = global

[*.lexicon]
file                            = $(LEXICON)
normalize-pronunciation         = true

[*.allophones]
add-from-lexicon                = true
add-all                         = false

# ---------------------------------------------------------------------------
[*.feature-extraction]
*.network-file-path             = $(SIGNAL_ANALYSIS)
file                            = config/linear-segmentation.flow
base-feature-extraction.file    = shared/cache.concatenate-with-derivatives.linear-transform.energy.flow
*.base-feature-extraction-cache.path = data/mfcc.features.cache
*.linear-transform.file         = data/total-scatter-normalization.matrix
*.audio-format                  = wav

# ---------------------------------------------------------------------------
[*.acoustic-model.state-tying]
type                            = monophone

[*.acoustic-model.hmm]
states-per-phone                = 3
state-repetitions               = 1
across-word-model               = no
early-recombination             = no

# ---------------------------------------------------------------------------
[*.acoustic-model-trainer.channels]
output-channel.file             = log/$(DESCRIPTION).log
output-channel.append           = false
output-channel.encoding         = UTF-8
output-channel.unbuffered       = false
output-channel.compressed       = true


[*]
statistics.channel              = output-channel                    
system-info.channel             = output-channel                                     
configuration.channel           = output-channel                                   
log.channel                     = output-channel
progress.channel                = output-channel
warning.channel                 = output-channel, stderr
error.channel                   = output-channel, stderr

