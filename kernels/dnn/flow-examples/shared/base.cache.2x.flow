<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
     (c) 2008 by RWTH Aachen University
     rwthasr@i6.informatik.rwth-aachen.de
     You can redistribute this file and/or modify it under the terms of the
     RWTH ASR License
     <http://www-i6.informatik.rwth-aachen.de/rwth-asr/rwth-asr-license.html>
-->
<network>
  <out name="features"/>

  <param name="id"/>

  <param name="input-file"/>
  <param name="start-time"/>
  <param name="end-time"/>
  <param name="track"/>

  <param name="speaker"/>

  <!-- here we read in the WAV files and convert data types -->
  <node name="samples" filter="samples.flow"
	input-file="$(input-file)" start-time="$(start-time)" end-time="$(end-time)" track="$(track)"/>

  <!-- 
       this is a configurable feature extraction node that takes 'samples' as input
       and returns some features through the port 'out1' and 'out2'
  -->
  <node name="base-feature-extraction" filter="$(file)"
	ignore-unknown-parameters="true" id="$(id)"
	start-time="$(start-time)" end-time="$(end-time)" speaker="$(speaker)"/>
  <link from="samples:out" to="base-feature-extraction:samples"/>

  <!-- store features in a cache for further processing (acoustic training, search, etc.) -->
  <node name="base-feature-extraction-cache1" filter="generic-cache" id="$(id)"/>
  <link from="base-feature-extraction:out1" to="base-feature-extraction-cache1"/>

  <node name="base-feature-extraction-cache2" filter="generic-cache" id="$(id)"/>
  <link from="base-feature-extraction:out2" to="base-feature-extraction-cache2"/>

  <!-- 
       merge both feature streams so that pulling at the network output will 
       make both caches get filled 
  -->
  <node name="concatenation" filter="generic-vector-f32-concat" check-same-length="true"/>
  <link from="base-feature-extraction-cache1" to="concatenation:in1"/>
  <link from="base-feature-extraction-cache2" to="concatenation:in2"/>

  <!-- output port the feature-extraction tool needs to pull at -->
  <link from="concatenation" to="network:features"/>
</network>
