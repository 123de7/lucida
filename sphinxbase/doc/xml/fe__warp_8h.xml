<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="fe__warp_8h" kind="file">
    <compoundname>fe_warp.h</compoundname>
    <includes refid="fe__internal_8h" local="yes">fe_internal.h</includes>
    <includedby refid="fe__interface_8c" local="yes">src/libsphinxbase/fe/fe_interface.c</includedby>
    <includedby refid="fe__sigproc_8c" local="yes">src/libsphinxbase/fe/fe_sigproc.c</includedby>
    <includedby refid="fe__warp_8c" local="yes">src/libsphinxbase/fe/fe_warp.c</includedby>
    <includedby refid="fe__warp__affine_8c" local="yes">src/libsphinxbase/fe/fe_warp_affine.c</includedby>
    <includedby refid="fe__warp__inverse__linear_8c" local="yes">src/libsphinxbase/fe/fe_warp_inverse_linear.c</includedby>
    <includedby refid="fe__warp__piecewise__linear_8c" local="yes">src/libsphinxbase/fe/fe_warp_piecewise_linear.c</includedby>
    <incdepgraph>
      <node id="1501">
        <label>stdarg.h</label>
      </node>
      <node id="1495">
        <label>src/libsphinxbase/fe/fe_warp.h</label>
        <link refid="fe_warp.h"/>
        <childnode refid="1496" relation="include">
        </childnode>
      </node>
      <node id="1507">
        <label>fe_type.h</label>
        <link refid="fe__type_8h_source"/>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
      </node>
      <node id="1505">
        <label>limits.h</label>
      </node>
      <node id="1503">
        <label>sphinx_config.h</label>
      </node>
      <node id="1508">
        <label>fe_prespch_buf.h</label>
        <link refid="fe__prespch__buf_8h_source"/>
        <childnode refid="1497" relation="include">
        </childnode>
      </node>
      <node id="1504">
        <label>sphinxbase/fixpoint.h</label>
        <link refid="fixpoint_8h_source"/>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
      </node>
      <node id="1498">
        <label>sphinxbase/sphinxbase_export.h</label>
        <link refid="sphinxbase__export_8h_source"/>
      </node>
      <node id="1502">
        <label>sphinxbase/prim_type.h</label>
        <link refid="prim__type_8h"/>
        <childnode refid="1503" relation="include">
        </childnode>
      </node>
      <node id="1499">
        <label>sphinxbase/cmd_ln.h</label>
        <link refid="cmd__ln_8h"/>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
      </node>
      <node id="1497">
        <label>sphinxbase/fe.h</label>
        <link refid="fe_8h_source"/>
        <childnode refid="1498" relation="include">
        </childnode>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
      </node>
      <node id="1496">
        <label>fe_internal.h</label>
        <link refid="fe__internal_8h_source"/>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1508" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
      </node>
      <node id="1500">
        <label>stdio.h</label>
      </node>
      <node id="1506">
        <label>fe_noise.h</label>
        <link refid="fe__noise_8h_source"/>
        <childnode refid="1497" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1513">
        <label>src/libsphinxbase/fe/fe_warp_affine.c</label>
        <link refid="fe__warp__affine_8c_source"/>
      </node>
      <node id="1515">
        <label>src/libsphinxbase/fe/fe_warp_piecewise_linear.c</label>
        <link refid="fe__warp__piecewise__linear_8c_source"/>
      </node>
      <node id="1514">
        <label>src/libsphinxbase/fe/fe_warp_inverse_linear.c</label>
        <link refid="fe__warp__inverse__linear_8c_source"/>
      </node>
      <node id="1511">
        <label>src/libsphinxbase/fe/fe_sigproc.c</label>
        <link refid="fe__sigproc_8c_source"/>
      </node>
      <node id="1512">
        <label>src/libsphinxbase/fe/fe_warp.c</label>
        <link refid="fe__warp_8c_source"/>
      </node>
      <node id="1509">
        <label>src/libsphinxbase/fe/fe_warp.h</label>
        <link refid="fe_warp.h"/>
        <childnode refid="1510" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
        <childnode refid="1513" relation="include">
        </childnode>
        <childnode refid="1514" relation="include">
        </childnode>
        <childnode refid="1515" relation="include">
        </childnode>
      </node>
      <node id="1510">
        <label>src/libsphinxbase/fe/fe_interface.c</label>
        <link refid="fe__interface_8c_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structfe__warp__conf__t" prot="public">fe_warp_conf_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fe__warp_8h_1a0a4f26b6c30a6adb4200f9eec05b69b3" prot="public" static="no">
        <name>FE_WARP_ID_INVERSE_LINEAR</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="50" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__warp_8h_1af63a83afaf569bfc67c3726f6aa1b354" prot="public" static="no">
        <name>FE_WARP_ID_AFFINE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="51" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__warp_8h_1af5611da439e2a86e6410a589fb227f51" prot="public" static="no">
        <name>FE_WARP_ID_PIECEWISE_LINEAR</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="52" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__warp_8h_1ad37f4732f447455ca80a530d953218cb" prot="public" static="no">
        <name>FE_WARP_ID_EIDE_GISH</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="53" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__warp_8h_1a73a6bb0876dee4744cf37cf55b685526" prot="public" static="no">
        <name>FE_WARP_ID_MAX</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="54" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__warp_8h_1a177eb3c84654d749fa354f8197989120" prot="public" static="no">
        <name>FE_WARP_ID_NONE</name>
        <initializer>0xffffffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="55" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fe__warp_8h_1a2fe3cdf746c4790b9a7da60043e0ae48" prot="public" static="no">
        <name>FE_WARP_NO_SIZE</name>
        <initializer>0xffffffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="83" column="9" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fe__warp_8h_1a5742a7fea443a7ff436b891b1091069e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fe_warp_set</definition>
        <argsstring>(melfb_t *mel, const char *id_name)</argsstring>
        <name>fe_warp_set</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="67" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="101" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1a9c94a800ca4aed0a0616d9d5e82eb843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 fe_warp_id</definition>
        <argsstring>(melfb_t *mel)</argsstring>
        <name>fe_warp_id</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="69" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="169" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1abde658d12d0dc4f166c07b69db2da868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* fe_warp_doc</definition>
        <argsstring>(melfb_t *mel)</argsstring>
        <name>fe_warp_doc</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="71" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="151" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1a58cc2258fb96c38703619b921292baf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_warp_set_parameters</definition>
        <argsstring>(melfb_t *mel, char const *param_str, float sampling_rate)</argsstring>
        <name>fe_warp_set_parameters</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>param_str</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sampling_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="73" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="135" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1ac70c532bf18f225a8c7bb800a7de62a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32</type>
        <definition>uint32 fe_warp_n_param</definition>
        <argsstring>(melfb_t *mel)</argsstring>
        <name>fe_warp_n_param</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="75" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="185" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1a51cc3fa22d9a04226601fafa861392d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float fe_warp_warped_to_unwarped</definition>
        <argsstring>(melfb_t *mel, float nonlinear)</argsstring>
        <name>fe_warp_warped_to_unwarped</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>float</type>
          <declname>nonlinear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="77" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="203" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1ac0897df607a4570eb10afe5bdae7f82a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float fe_warp_unwarped_to_warped</definition>
        <argsstring>(melfb_t *mel, float linear)</argsstring>
        <name>fe_warp_unwarped_to_warped</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>float</type>
          <declname>linear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="79" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="221" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="fe__warp_8h_1aabd8e72a16be835d480b1c268434a670" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fe_warp_print</definition>
        <argsstring>(melfb_t *mel, const char *label)</argsstring>
        <name>fe_warp_print</name>
        <param>
          <type><ref refid="structmelfb__s" kindref="compound">melfb_t</ref> *</type>
          <declname>mel</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h" line="81" column="1" bodyfile="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.c" bodystart="239" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>====================================================================</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2006<sp/>Carnegie<sp/>Mellon<sp/>University.<sp/><sp/>All<sp/>rights<sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>This<sp/>work<sp/>was<sp/>supported<sp/>in<sp/>part<sp/>by<sp/>funding<sp/>from<sp/>the<sp/>Defense<sp/>Advanced<sp/></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>Research<sp/>Projects<sp/>Agency<sp/>and<sp/>the<sp/>National<sp/>Science<sp/>Foundation<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>United<sp/>States<sp/>of<sp/>America,<sp/>and<sp/>the<sp/>CMU<sp/>Sphinx<sp/>Speech<sp/>Consortium.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESSED<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>CARNEGIE<sp/>MELLON<sp/>UNIVERSITY</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>NOR<sp/>ITS<sp/>EMPLOYEES<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>====================================================================</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FE_WARP_H</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_H</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;fe_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="comment">/*<sp/>Fool<sp/>Emacs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_ID_INVERSE_LINEAR<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_ID_AFFINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_ID_PIECEWISE_LINEAR<sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_ID_EIDE_GISH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_ID_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_ID_NONE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xffffffff</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="structfe__warp__conf__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*set_parameters)(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*param_str,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sampling_rate);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>(*doc)(void);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>(*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)(void);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32<sp/>(*n_param)(void);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>float<sp/>(*warped_to_unwarped)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nonlinear);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>float<sp/>(*unwarped_to_warped)(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linear);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*print)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/><ref refid="structfe__warp__conf__t" kindref="compound">fe_warp_conf_t</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fe_warp_set(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*id_name);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal">uint32<sp/>fe_warp_id(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fe_warp_doc(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_warp_set_parameters(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*param_str,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sampling_rate);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">uint32<sp/>fe_warp_n_param(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fe_warp_warped_to_unwarped(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nonlinear);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>fe_warp_unwarped_to_warped(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>linear);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fe_warp_print(<ref refid="structmelfb__s" kindref="compound">melfb_t</ref><sp/>*mel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FE_WARP_NO_SIZE<sp/>0xffffffff</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FE_WARP_H<sp/>*/</highlight><highlight class="preprocessor"><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>Log<sp/>record.<sp/><sp/>Maintained<sp/>by<sp/>RCS.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>$Log:<sp/>fe_warp.h,v<sp/>$</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.2<sp/><sp/>2006/02/17<sp/>00:31:34<sp/><sp/>egouvea</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Removed<sp/>switch<sp/>-melwarp.<sp/>Changed<sp/>the<sp/>default<sp/>for<sp/>window<sp/>length<sp/>to</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>0.025625<sp/>from<sp/>0.256<sp/>(so<sp/>that<sp/>a<sp/>window<sp/>at<sp/>16kHz<sp/>sampling<sp/>rate<sp/>has</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>exactly<sp/>410<sp/>samples).<sp/>Cleaned<sp/>up<sp/>include&apos;s.<sp/>Replaced<sp/>some<sp/>E_FATAL()</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>with<sp/>E_WARN()<sp/>and<sp/>return.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>Revision<sp/>1.1<sp/><sp/>2006/02/16<sp/>00:18:26<sp/><sp/>egouvea</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>Implemented<sp/>flexible<sp/>warping<sp/>function.<sp/>The<sp/>user<sp/>can<sp/>specify<sp/>at<sp/>run</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>time<sp/>which<sp/>of<sp/>several<sp/>shapes<sp/>they<sp/>want<sp/>to<sp/>use.<sp/>Currently<sp/>implemented</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>are<sp/>an<sp/>affine<sp/>function<sp/>(y<sp/>=<sp/>ax<sp/>+<sp/>b),<sp/>an<sp/>inverse<sp/>linear<sp/>(y<sp/>=<sp/>a/x)<sp/>and<sp/>a</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>piecewise<sp/>linear<sp/>(y<sp/>=<sp/>ax,<sp/>up<sp/>to<sp/>a<sp/>frequency<sp/>F,<sp/>and<sp/>then<sp/>it<sp/>&quot;breaks&quot;<sp/>so</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>Nyquist<sp/>frequency<sp/>matches<sp/>in<sp/>both<sp/>scales.</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>Added<sp/>two<sp/>switches,<sp/>-warp_type<sp/>and<sp/>-warp_params.<sp/>The<sp/>first<sp/>specifies</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>the<sp/>type,<sp/>which<sp/>valid<sp/>values:</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>-inverse<sp/>or<sp/>inverse_linear</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>-linear<sp/>or<sp/>affine</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>-piecewise<sp/>or<sp/>piecewise_linear</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>The<sp/>inverse_linear<sp/>is<sp/>the<sp/>same<sp/>as<sp/>implemented<sp/>by<sp/>EHT.<sp/>The<sp/>-mel_warp</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>switch<sp/>was<sp/>kept<sp/>for<sp/>compatibility<sp/>(maybe<sp/>remove<sp/>it<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>future?).<sp/>The<sp/>code<sp/>is<sp/>compatible<sp/>with<sp/>EHT&apos;s<sp/>changes:<sp/>cepstra<sp/>created</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>from<sp/>code<sp/>after<sp/>his<sp/>changes<sp/>should<sp/>be<sp/>the<sp/>same<sp/>as<sp/>now.<sp/>Scripts<sp/>that</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>worked<sp/>with<sp/>his<sp/>changes<sp/>should<sp/>work<sp/>now<sp/>without<sp/>changes.<sp/>Tested<sp/>a<sp/>few</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>cases,<sp/>same<sp/>results.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/gpuser/cmusphinx-code/sphinxbase/src/libsphinxbase/fe/fe_warp.h"/>
  </compounddef>
</doxygen>
